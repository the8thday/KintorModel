---
title: "Propensity Score"
format: html
---

## Propensity Score

> 参考自一篇公众号：https://mp.weixin.qq.com/s/nfHSlr1TZrPzU8U8wu76aQ


倾向性评分（Propensity Score, PS）是一种控制混杂因素的统计学方法，通过倾向性评分的方法，可以把基线控制在可比的水平，这样就可以比较处理因素带来的差异了。

比如，现在要比较A,B两种方法治疗肥胖的效果，随机分两组，分别使用A,B两种方法半年，看哪个方法效果好。一般收集到的病人性别、年龄、身高、体重、家族史、生活习惯、收入水平、生活地区等都是不一样的，这些混杂因素不控制，你很难说清楚到底是两种方法的效果还是混杂因素导致的。

利用倾向性评分就可以控制这些混杂，但是控制混杂因素的方法非常多，不要拘泥于此。对于类似上面这种情况，你还可以用协方差分析、多因素分析（统计学中的3大回归！线性回归、逻辑回归、Cox回归）、分层分析等，也可以起到控制混杂因素的效果，这些在之前的推文中全都有涉及，大家可以自行查看。

倾向性评分最大的优势是将多个混杂因素的影响用一个综合的值来表示，即倾向性评分值（Propensity Score, PS），从而降低协变量的维度，因此该方法尤其适用于协变量较多的情况。

倾向性评分的一般步骤为：

估计 PS 值；
利用 PS 值均衡协变量分布；
均衡性检验及模型评价；
处理效应估计。
其中，PS 值的估计是以处理因素作为因变量，其他混杂因素作为自变量，通过建立一个模型（可以是传统的回归模型，也可以是机器学习方法）来估计每个研究对象接受处理因素的可能性。

目前用于估计 PS 值的方法有 logistic 回归，Probit 回归、神经网络、支持向量机、分类与回归数、Boosting 算法、SuperLearner 等。其中 logistic 回归是目前最常用的方法。



```{r, include=FALSE}
library(tidyverse)

library(MatchIt)
library(lmtest)
library(sandwich)
```


```{r}

currentDataset <- read_csv("./datasets/smoking_psyc_distress.csv")

currentDataset |> head()
```


```{r}
library(tableone)

table2 <- CreateTableOne(vars = c('x.Age', 'x.Gender', 'CVD'),
                         data = data,
                         factorVars = c('x.Gender', 'CVD'),
                         strata = 'Smoke',
                         smd=TRUE)
table2 <- print(table2,smd=TRUE,
                showAllLevels = TRUE,
                noSpaces = TRUE,
                printToggle = FALSE)
table2
```


```{r}
# 这里为了方便演示直接删掉了缺失值
data.complete <- na.omit(data)

# 因变量是处理因素，自变量是需要平衡的协变量
m.out <- matchit(Smoke~x.Age+x.Gender,
                 data = data.complete,
                 distance = "logit" # 选择logistic回归
                 )

m.out
```


可通过以下方法获得算法估计的PS值：
```{r}
eps <- m.out$distance
length(eps)
```

一开始我们已经计算出了实际PS值（tps），所以我们可以画一个tps和估计ps的散点图，以tps为横坐标，以eps为纵坐标：

```{r}
# 去掉缺失值
tps.comp <- tps[complete.cases(data)]
Smoke.comp <- as.factor(Smoke[complete.cases(data)])
df <- data.frame(True=tps.comp, Estimated=eps, Smoke=Smoke.comp)

ggplot(df, aes(x=True, y=Estimated, colour=Smoke)) +
geom_point() +
geom_abline(intercept=0,slope=1, colour="#990000", linetype="dashed") +
expand_limits(x=c(0,1),y=c(0,1))


# 对x.Age平方
m.out <- matchit(Smoke~I(x.Age^2)+x.Age +x.Gender,
                 data=data.complete) 

eps <- m.out$distance

tps.comp <- tps[complete.cases(data)]
Smoke.comp <- as.factor(Smoke[complete.cases(data)])
df <- data.frame(True=tps.comp, Estimated=eps, Smoke=Smoke.comp)
ggplot(df, aes(x=True, y=Estimated, colour=Smoke)) +
geom_point() +
geom_abline(intercept=0,slope=1, colour="#990000", linetype="dashed") +
expand_limits(x=c(0,1),y=c(0,1))
```



