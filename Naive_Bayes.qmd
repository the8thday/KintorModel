---
title: "naive bayes"
format: html
---

## Naive Bayes

> https://github.com/thebioengineer/TidyX
> http://optimumsportsperformance.com/blog/
> https://parsnip.tidymodels.org/reference/naive_Bayes.html
> https://parsnip.tidymodels.org/reference/details_naive_Bayes_naivebayes.html


Bayes定理是,


Naive Bayes是基于贝叶斯定理和条件独立性假设的假设方法(所有的特征间彼此独立)。
通过特征求的条件概率最大的分类。


*This model has 2 tuning parameter:*
`smoothness`: Kernel Smoothness (type: double, default: 1.0)
`Laplace`: Laplace Correction (type: double, default: 0.0)



```{r, include=FALSE}
library(tidyverse)
library(tidymodels)
library(palmerpenguins)
library(discrim) ## for naive bayes

library(klaR)
```


```{r}
## Remove the two observations with all data missing
penguins_cleaned <- penguins %>%
  filter(!is.na(bill_depth_mm))

set.seed(6923)
penguin_split <- initial_split(penguins_cleaned, strata = "species")
train <- training(penguin_split)
test <- testing(penguin_split)
```


```{r}
set.seed(3344)
cv_folds <- vfold_cv(
  data = train, 
  v = 5
  ) 
cv_folds
```


```{r}
# ?naive_Bayes
# 目前只能fit classification model
nb_model <- naive_Bayes() %>% 
  set_mode("classification") %>% 
  set_engine("klaR")


penguins_rec <- recipe(
    species ~ . ,
    data = train
  ) %>%
  step_impute_knn(
    sex,
    neighbors = 3
  ) %>% 
  update_role(
    year, island,
    new_role = "ID"
  )

penguins_wf <- workflow() %>% 
  add_recipe(penguins_rec) %>% 
  add_model(nb_model)
```


```{r}
nb_fit <- penguins_wf %>% 
  fit_resamples(
    resamples = cv_folds
  )


collect_metrics(nb_fit)
```


### Make Predictions on Test Data

```{r}
nb_final <- penguins_wf %>% 
  last_fit(
    split = penguin_split
  )

collect_metrics(nb_final)

nb_test_pred <- bind_cols(
  test,
  nb_final %>% collect_predictions() %>% dplyr::select(starts_with(".pred_"))
)

```


```{r}
table("predicted class" = nb_test_pred$.pred_class,
      "observed class" = nb_test_pred$species)

nb_test_pred %>% 
  roc_curve(
    truth = species,
    .pred_Adelie, .pred_Chinstrap, .pred_Gentoo
  ) %>% 
  autoplot()
```

