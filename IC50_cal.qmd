---
title: "IC50 数据分析"
format: html
---

## IC50 数据分析

> https://rstudio-pubs-static.s3.amazonaws.com/378543_5b5bda32bf0541a485ccc49efbea680a.html
> https://towardsdatascience.com/drug-dose-response-data-analysis-5d7d336ad8e9
> https://www.graphpad.com/guides/prism/latest/curve-fitting/reg_models_built-in_to_prism.htm
> https://www.aatbio.com/tools/ic50-calculator



复现常见的药物IC50计算和绘图.
针对不同的实验设计，比如激动剂药物和拮抗剂药物，体外还是体内实验，严格来说体内实验是`dose-response curve`, 对于体外实验`concentration-response curve`是一个更为合适的称谓，不过一般宽泛的称为`dose-response`。

CDC官网对四参数最低的data points数目要求为a minimum of five data points is required for parameter estimation。不过 查到的为ELISA数据，此处也是仅供参考。


IC50 is the “half-maximal inhibitory concentration” for an entity (typically a drug) against a biological process or function (eg, enzyme activity, cell number, metabolic activity). 

EC50 is, comparably, the “half-maximal effective concentration”. The effective is in there because not all entities will completely wipe out the biological process that you are assaying. 如果没有一个最大和最小值是不可能计算EC50的。
就只是response最下和最大值的中位值所对应的浓度。在拮抗剂可以让100%的细胞死亡的情况下，EC50=IC50。再比如说一个拮抗剂最多能杀死45%的细胞，那么IC50是不存在的，但是可以有EC50.

Kd


- E0: Response observed in absence of drug
- Einf: Maximum response caused by a drug
- EC50: Concentration of a drug at which 50% of its maximal response is induced. EC50 is normally measured in molar concentrations and is used as a measure of agonist drug potency — the lower the EC50 value, the lower the concentration of drug required to elicit a 50% maximal response and the greater the potency of the drug.
- IC50: Concentration of a drug required for 50% inhibition of cell growth. It is normally measured in molar concentrations and is used as a measure of antagonist drug potency — the lower the IC50 value, the more potent the drug is.
- Hill slope: 从定义可以看出拮抗剂的slope值一般是小于0的。而和1的对比可以大概看出曲线的坡度。


*four-parameter log-logistic model: * 四参数模型是较为常用的，除此之外还有三参数、五参数模型等。

  在对数据进行绘图时，一般会对X轴的浓度数据取log，而Y轴的response一般进行简单的线性转换，主要是保证that all scatter around the curve is Gaussian。



```{r}
library(tidyverse)
library(ggprism)
library(pzfx) # read GraphPad data
library(drc) # Dose response curve
library(sandwich)
library(lmtest)

# 解决drc的一个bug
# 在用sandwich包时的一个小错误
registerS3method("estfun", "drc", drc::estfun.drc)
registerS3method("bread", "drc", drc::bread.drc)
```



```{r}
pzfx_tables('~/OneDrive/kintor/Daily_Work/IC50_xiaodan/data.pzfx')

```



```{r}

dd <- pzfx::read_pzfx('~/OneDrive/kintor/Daily_Work/IC50_xiaodan/data.pzfx', 
                      "22RV1-GT19686")

dd
```


```{r}
d_p <- dd %>% rename('drug_con' = 'Var.1','rep1' = '_1',
              'rep2' = '_2', 'rep3' = '_3'
              ) %>% 
  mutate(id = row_number()) %>% 
  rowwise() %>% 
  mutate(inhib_mean = mean(c_across(c(rep1, rep2, rep3)))) %>% 
  ungroup() %>% 
  relocate(id, everything())

d_p
```

```{r}
d_long <- d_p %>% pivot_longer(cols = -c(id, drug_con, inhib_mean),
                               names_to = 'rep',
                               values_to = 'response'
                               )

d_long
```


`drc` package 用来拟合`dose-response curve`，`drm` (which fits the regression model) and `LL.4` (which defines the structure of the regression model).

```{r}
fitted_curve <- drc::drm(
  formula = inhib_mean ~ drug_con,
  data = d_p,
  fct = LL.4(names = c("hill", "min_value", "max_value", "ec_50"))
  # fct = LL.3()
  )


summary(fitted_curve)
```


```{r}
fitted_curve2 <- drc::drm(
  formula = response ~ drug_con,
  data = d_long,
  # fct = LL.4(names = c("hill", "min_value", "max_value", "ec_50"))
  fct = drc::MM.3()
  )


summary(fitted_curve2)

lmtest::coeftest(fitted_curve2, vcov = sandwich)
# summary(multcomp::glht(ryegrass.LL.4)) # same result as above
```


计算ED值：

```{r}
ED(fitted_curve2, c(5, 10, 50, 80), interval = "delta")

```



计算IC50值:
```{r}
coefs <- setNames(
  fitted_curve$coefficients,
  c("hill", "min_value", "max_value", "ec_50")
  )

ic_50 <- with(
  as.list(coefs),
  exp(
    log(ec_50) + (1 / hill) * log(max_value / (max_value - 2 * min_value))
  )
)

ic_50
```


利用ggplot2绘制漂亮的图片：

```{r}
# new dose levels as support for the line
newdata <- expand.grid(conc = exp(seq(log(0.01), log(100), length = 100)))
# newdata <- expand(conc = )
# predictions and confidence intervals
pm <- predict(fitted_curve, newdata = newdata, interval = "confidence")
# new data with predictions
newdata$p <- pm[, 1]
newdata$pmin <- pm[, 2]
newdata$pmax <- pm[, 3]
# plot curve
library(ggplot2)
# need to shift conc == 0 a bit up, otherwise there are problems with coord_trans
d_long$conc0 <- d_long$drug_con
# d_p$conc0 <- log(d_p$drug_con)
d_long$conc0[d_long$conc0 == 0] <- 0.001
# plotting the curve
ggplot(d_long, aes(x = conc0, y = response)) +
  geom_point(size =3) +
  geom_ribbon(data = newdata, aes(x = conc, y = p, ymin = pmin, ymax = pmax), alpha = 0.2) +
  geom_line(data = newdata, aes(x = conc, y = p)) +
  scale_x_log10() +
  xlab("[Agonist], M") +
  ylab("Response") +
  scale_colour_manual(
    values = c("#9FA3FE", "#00167B", "#9FA3FE")
  ) +
  ggnewscale::new_scale_colour() +
  scale_colour_prism(
    palette = "winter_bright",
  ) +
  scale_shape_prism() +
  theme_prism(palette = "winter_bright", base_size = 16) +
  theme(
    axis.title.y = element_blank(),
    legend.title = element_blank(),
    legend.position = c(0.05, 0.95),
    legend.justification = c(0.05, 0.95)
  )
```



```{r}
# Note the logged x-axis
plot(fitted_curve, 
     log='x', 
     xlab = 'Drug concentration (microM)', 
     ylab= 'Inhibition')
```

此为另一篇推文计算的IC50和上述有所不同。

```{r}
E0 <- fitted_curve$coefficients[2]
Einf <- fitted_curve$coefficients[3]
EC50 <- fitted_curve$coefficients[4]
H <-  -fitted_curve$coefficients[1]
IC50 <- exp(log((((Einf - E0) / (50 - E0) ) - 1) * EC50**(-H))/ (-H))

efficacy_metrics <- data.frame(c(E0, Einf, EC50, H, IC50))
rownames(efficacy_metrics) <- c('E0', 'Einf', 'EC50', 'H', 'IC50')
colnames(efficacy_metrics) <- 'Value'
efficacy_metrics
```


```{r}
dose_resp <- y ~ min + ((max - min) / (1 + exp(hill_coefficient * (ec50 - x))))

d_p %>%
  mutate(drug_con_log = log10(drug_con)) %>%
  pivot_longer(
    cols = -c(drug_con, drug_con_log, id, inhib_mean),
    names_pattern = "(.{3})([0-9])",
    names_to = c("treatment", "rep"),
    values_to = "response"
  ) %>%
  ggplot(
    aes(x = drug_con_log, y = response)
  ) +
  geom_smooth(
    #aes(colour = treatment),
    method = "nls", formula = dose_resp, se = FALSE,
    method.args = list(start = list(
      min = E0, max = Einf,
      ec50 = EC50, hill_coefficient = H
    ))
  ) +
  scale_colour_manual(
    labels = c("Inhibitor"),
    values = c("#00167B", "#9FA3FE")
  ) +
  ggnewscale::new_scale_colour() +
  geom_point(size = 3) +
  scale_colour_prism(
    palette = "winter_bright",
    labels = c(
      "Inhibitor"
    )
  ) +
  scale_shape_prism(
    labels = c(
      "Inhibitor"
    )
  ) +
  theme_prism(palette = "winter_bright", base_size = 16) +
  theme(
    axis.title.y = element_blank(),
    legend.title = element_blank(),
    legend.position = c(0.05, 0.95),
    legend.justification = c(0.05, 0.95)
  ) +
  labs(x = "[Agonist], M")
```



```{r}
#plot_2
p1 <- ggplot(data = ryegrass,
       aes(x = conc, y = rootl)) + 
  geom_point(col = "yellowgreen") + 
  geom_smooth(method = drm,col = "skyblue", method.args = list(fct = L.4()), se = F) +
  scale_x_log10() +
  labs(title= "", x = "Dose (mM)",  y = "Root length (cm)") + 
  theme(legend.position = "",
        panel.background = element_blank(),
        panel.border = element_rect(colour = "black", fill=NA, size=0),
        panel.grid = element_blank(),
        axis.text.x   = element_text(size= 12, color = "darkblue",family = "sans",hjust = 0.5),
        axis.text.y   = element_text(size= 12, color = "darkblue",family = "sans",vjust = 0.5,hjust = 0.5),
        axis.title  = element_text(size=12, color = "darkred",family = "sans"),
        axis.ticks =  element_line(size= 0.5),
        axis.ticks.length = unit(3, "pt"))
p1
```


绘制基于`ggplot2`的漂亮图片：

```{r}
ryegrass_1 <- aggregate(ryegrass[1],list(conc = ryegrass$conc),FUN = mean)
ryegrass_1$sd <- aggregate(ryegrass[1],list(conc = ryegrass$conc),FUN = sd)$rootl
ryegrass_1


p2 <- ggplot(data = ryegrass_1,
             aes(x = conc, y = rootl)) + 
  geom_point(col = "red", size=3, shape=21, fill="green",position = "identity") + 
  geom_errorbar(aes(ymin=rootl-sd, ymax=rootl+sd), width=.05,position = "identity")+
  geom_smooth(method = drm,col = "skyblue", method.args = list(fct = L.4()), se = F) +
  labs(title= "", x = "Dose (mM)",  y = "Root length (cm)") + 
  theme(legend.position = "",
        panel.background = element_blank(),
        panel.border = element_rect(colour = "black", fill=NA, size=0),
        panel.grid = element_blank(),
        axis.text.x   = element_text(size= 12, color = "darkblue",family = "sans",hjust = 0.5),
        axis.text.y   = element_text(size= 12, color = "darkblue",family = "sans",vjust = 0.5,hjust = 0.5),
        axis.title  = element_text(size=12, color = "darkred",family = "sans"),
        axis.ticks =  element_line(size= 0.5),
        axis.ticks.length = unit(3, "pt")) +
        scale_x_log10() 
p2
```


